set -g default-terminal "screen-256color"
set -g mouse on

# Allows to toggle mouse mode on and off
bind m set -g mouse on\; display 'Mouse: ON'
bind M set -g mouse off\; display 'Mouse: OFF'

# Ctrl-a prefix binding; keep Ctrl-b binding.
set-option -g prefix C-a
set-option -g prefix2 C-b

# reload config
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded..."

# create new windows and panes with pane current path (requires tmux 1.9+)
unbind c; bind c new-window -c "#{pane_current_path}"
unbind "\""; bind "\"" split-window -v -c "#{pane_current_path}"
unbind %; bind % split-window -h -c "#{pane_current_path}"

# cycle between panes with double Ctrl+A
unbind ^A; bind ^A select-pane -t :.+

# copy mode - use vim keybindings
setw -g mode-keys vi

# needs reattach-to-user-namespace on Max OS ('brew install reattach-to-user-namespace') or xclip on Linux
# setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
# vim-style yanking
if-shell "uname | grep -q Darwin" 'bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"'
if-shell "uname | grep -q Linux" 'bind-key -t vi-copy y copy-pipe "xclip -in -selection clipboard"'
# copy to clipboard when selecting with mouse
if-shell "uname | grep -q Darwin" 'bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "reattach-to-user-namespace pbcopy"'
if-shell "uname | grep -q Linux" 'bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "xclip -in -selection clipboard"'
# update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
if-shell "uname | grep -q Darwin" 'bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"'
if-shell "uname | grep -q Linux" 'bind-key -t vi-copy Enter copy-pipe "xclip -in -selection clipboard"'
